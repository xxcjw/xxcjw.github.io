<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
    <channel>
        <title>Java on xxcjw&#39;s blog!</title>
        <link>https://xxcjw.github.io/categories/java/</link>
        <description>Recent content in Java on xxcjw&#39;s blog!</description>
        <generator>Hugo -- gohugo.io</generator>
        <language>zh-cn</language>
        <copyright>xxcjw&#39;s bolg！</copyright><atom:link href="https://xxcjw.github.io/categories/java/index.xml" rel="self" type="application/rss+xml" /><item>
        <title>Java_index</title>
        <link>https://xxcjw.github.io/p/java_index/</link>
        <pubDate>Sun, 20 Apr 2025 18:17:54 +0800</pubDate>
        
        <guid>https://xxcjw.github.io/p/java_index/</guid>
        <description>&lt;h2 id=&#34;基础语法&#34;&gt;基础语法
&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://www.runoob.com/java/java-tutorial.html&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;菜鸟教程 |Java 教程&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://liaoxuefeng.com/books/java/introduction/index.html&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;廖雪峰的官方网站&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;h2 id=&#34;论坛--经验&#34;&gt;论坛 &amp;amp; 经验
&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://404name.notion.site/c2c07aa1cfa6408694458e0d24a1db14?v=7f603148027542e2bb8ad733c65104a6&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;java学习网站推荐-导航&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://www.yuque.com/r/coding-guide/activities&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;学习经验分享 · 语雀&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;h2 id=&#34;java八股&#34;&gt;java八股
&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://pdai.tech/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Java 全栈知识体系&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://xiaolincoding.com/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;小林coding&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://javaguide.cn/home.html&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;JavaGuide（Java学习&amp;amp;面试指南）&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://javabetter.cn/home.html&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;二哥的Java进阶之路&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://csguide.cn/roadmap/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;编程指北-计算机学习指南&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
</description>
        </item>
        <item>
        <title>Java基础-1</title>
        <link>https://xxcjw.github.io/p/java%E5%9F%BA%E7%A1%80-1/</link>
        <pubDate>Sun, 20 Apr 2025 15:52:46 +0800</pubDate>
        
        <guid>https://xxcjw.github.io/p/java%E5%9F%BA%E7%A1%80-1/</guid>
        <description>&lt;h2 id=&#34;java概述&#34;&gt;java概述
&lt;/h2&gt;&lt;h3 id=&#34;cmd命令&#34;&gt;cmd命令
&lt;/h3&gt;&lt;p&gt;指定位置快捷打开cmd：在文件夹下的路径上直接输入&lt;code&gt;cmd&lt;/code&gt;回车打开&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;环境变量&lt;/strong&gt;：就是把文件/软件所在的路径记录下来，从而在任何地方都能够打开。（一般是添加到系统环境变量中的&lt;code&gt;path&lt;/code&gt;，直接把软件的完整路径复制就行，而不是添加到用户环境变量）&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;过程：当在任何一个位置打开文件时，系统会从上往下依次扫描所记录的全部环境变量，一个一个查      看这个路径下是否有所要打开的文      件，直到找到
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h3 id=&#34;java安装和运行&#34;&gt;java安装和运行
&lt;/h3&gt;&lt;blockquote&gt;
&lt;p&gt;（建议把所有开发相关的软件放在同一文件夹下）&lt;/p&gt;
&lt;p&gt;1、下载和安装JDK&lt;/p&gt;
&lt;img src=&#34;markdown 图片/image-20250420163654961.png&#34; alt=&#34;image-20250420163654961&#34; style=&#34;zoom:30%;&#34; /&gt;
&lt;p&gt;2、下载IDEA&lt;/p&gt;
&lt;p&gt;java最好用的集成开发环境（编译、调试等），下载时下载收费版的exe文件（zip文件会包含一些说明文档，这些我们不需要），然后傻瓜式安装即可&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;输入&lt;code&gt;psvm&lt;/code&gt;或&lt;code&gt;main&lt;/code&gt;会自动生成main语句&lt;/li&gt;
&lt;li&gt;输入&lt;code&gt;so&lt;/code&gt;会自动生成输出语句&lt;/li&gt;
&lt;/ul&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;（javac、java工具都在jdk文件下的&lt;code&gt;bin&lt;/code&gt;目录下，安装时自动配置了环境变量，所以在命令行任何地方都能使用）运行java程序包含三个步骤：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;编写代码&lt;/li&gt;
&lt;li&gt;编译文件（即翻译成机器认识的语言）
&lt;ol&gt;
&lt;li&gt;javac是jdk提供的一个编译工具，编译后生成&lt;code&gt;.class&lt;/code&gt;文件&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;运行程序
&lt;ol&gt;
&lt;li&gt;java也是jdk提供的一个工具，用来运行程序（运行时不加后缀）&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ol&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;Idea UI的一些使用步骤：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;项目&lt;/strong&gt;是整体的大文件（微信）；项目中&lt;strong&gt;模块&lt;/strong&gt;是相互独立的（聊天、好友、朋友圈、我）；模块中有多个&lt;strong&gt;包&lt;/strong&gt;组成，即文件夹；在包里面有一个或多个&lt;strong&gt;类&lt;/strong&gt;用来写java代码&lt;/li&gt;
&lt;li&gt;注意：包的命令是有规范的，一般用&lt;strong&gt;公司域名的反写+包的作用&lt;/strong&gt;命名，如&lt;code&gt;com.itheima.demo1&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;配置：设置字体（consolas）、字号（18）、自动导包、不区分大小写、背景图片&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;项目模块相关操作：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;类的操作：新建类、删除类、修改类
&lt;ul&gt;
&lt;li&gt;修改类需要在类的文件右键重命名进行修改，而不能直接在代码里直接修改类名（要和文件名保持一致）&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;模块的操作：新建、删除、修改、导入&lt;/li&gt;
&lt;li&gt;项目的操作：新建、打开、关闭、修改&lt;/li&gt;
&lt;/ul&gt;
&lt;img src=&#34;markdown 图片/image-20250420165055831.png&#34; alt=&#34;image-20250420165055831&#34; style=&#34;zoom:33%;&#34; /&gt;
&lt;img src=&#34;markdown 图片/image-20250420165113681.png&#34; alt=&#34;image-20250420165113681&#34; style=&#34;zoom:67%;&#34; /&gt;
&lt;img src=&#34;markdown 图片/image-20250420165136484.png&#34; alt=&#34;image-20250420165136484&#34; style=&#34;zoom: 50%;&#34; /&gt;
&lt;img src=&#34;markdown 图片/image-20250420165233917.png&#34; alt=&#34;image-20250420165233917&#34; style=&#34;zoom:50%;&#34; /&gt;
&lt;img src=&#34;markdown 图片/image-20250420165306459.png&#34; alt=&#34;image-20250420165306459&#34; style=&#34;zoom:50%;&#34; /&gt;&lt;/blockquote&gt;
&lt;h3 id=&#34;配置环境变量&#34;&gt;配置环境变量
&lt;/h3&gt;&lt;blockquote&gt;
&lt;p&gt;为java相关的软件单独配置一个路径：&lt;code&gt;JAVA_HOME&lt;/code&gt;&lt;/p&gt;
&lt;img src=&#34;markdown 图片/image-20250420165644574.png&#34; alt=&#34;image-20250420165644574&#34; style=&#34;zoom:50%;&#34; /&gt;
&lt;p&gt;这样配置其实也就等价于直接置环境变量&lt;code&gt;E:\develop\jdk\bin&lt;/code&gt;了（只不过&lt;code&gt;path&lt;/code&gt;里面有很多环境变量，可能会操作到其他变量，如果不小心修改就完了）&lt;/p&gt;&lt;/blockquote&gt;
&lt;h3 id=&#34;java历史和分类&#34;&gt;java历史和分类
&lt;/h3&gt;&lt;h4 id=&#34;java历史&#34;&gt;java历史
&lt;/h4&gt;&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;JDK&lt;/strong&gt;（Java Development Kit）是Java开发工具包的缩写，主要组成部分有：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;java运行环境    &amp;ndash;JRE&lt;/li&gt;
&lt;li&gt;java虚拟机       &amp;ndash;JVM&lt;/li&gt;
&lt;li&gt;java工具          &amp;ndash;如javac、java、javap等&lt;/li&gt;
&lt;li&gt;java基础类库    &amp;ndash;如rt.jar&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;长期支持版本：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;JDK 8           发布于2014年&lt;/li&gt;
&lt;li&gt;JDK 11         发布于2018年&lt;/li&gt;
&lt;li&gt;JDK 17         发布于2021年&lt;/li&gt;
&lt;li&gt;JDK 21         发布于2023年&lt;/li&gt;
&lt;/ul&gt;
&lt;img src=&#34;markdown 图片/image-20250420170013636.png&#34; alt=&#34;image-20250420170013636&#34; style=&#34;zoom:50%;&#34; /&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://blog.csdn.net/sinat_33921105/article/details/117513645&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;一文彻底搞懂令人疑惑的Java和JDK的版本命名！&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://docs.oracle.com/en/java/javase/index.html&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Java Platform, 版本更新说明&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://zh.wikipedia.org/wiki/Java%e7%89%88%e6%9c%ac%e6%ad%b7%e5%8f%b2&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Java版本历史图 - 大佬总结&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;h4 id=&#34;java分类&#34;&gt;java分类
&lt;/h4&gt;&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;Java SE：java语言标准版，是其他两个版本的基础，用于桌面应用的开发&lt;/li&gt;
&lt;li&gt;Java ME：java语言的小型版，用于嵌入式设备开发（可忽略）&lt;/li&gt;
&lt;li&gt;Java EE：java语言的企业版，在SE基础上添加了一些企业级开发的规范和框架（最火爆）&lt;/li&gt;
&lt;/ul&gt;&lt;/blockquote&gt;
&lt;h4 id=&#34;java跨平台原理&#34;&gt;java跨平台原理
&lt;/h4&gt;&lt;blockquote&gt;
&lt;p&gt;java语言的跨平台是通过&lt;strong&gt;虚拟机&lt;/strong&gt;实现的&lt;/p&gt;
&lt;p&gt;java语言不是直接运行在操作系统里面的，而是运行在虚拟机中的&lt;/p&gt;
&lt;p&gt;针对不同的操作系统（平台），安装不同的虚拟机就可以了&lt;/p&gt;&lt;/blockquote&gt;
&lt;h4 id=&#34;jdk和jre&#34;&gt;jdk和jre
&lt;/h4&gt;&lt;blockquote&gt;
&lt;p&gt;java历史中已经简单介绍了，现在详细介绍一下：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;JDK：java开发工具包，用于&lt;strong&gt;开发和运行&lt;/strong&gt;java程序代码
&lt;ul&gt;
&lt;li&gt;JVM虚拟机：java程序运行的地方&lt;/li&gt;
&lt;li&gt;核心类库：各种类&lt;/li&gt;
&lt;li&gt;开发工具：javac、java、jdb、jhat&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;JRE：java运行环境，用来&lt;strong&gt;运行&lt;/strong&gt;java代码，相当于从JDK取了一部分出来
&lt;ul&gt;
&lt;li&gt;JVM&lt;/li&gt;
&lt;li&gt;核心类库&lt;/li&gt;
&lt;li&gt;部分运行工具&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;关系：JDK包含JRE，JRE包含JVM&lt;/p&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://www.runoob.com/w3cnote/the-different-of-jre-and-jdk.html&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;JRE 与 JDK的区别 | 菜鸟教程&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;h3 id=&#34;idea快捷键&#34;&gt;IDEA快捷键
&lt;/h3&gt;&lt;blockquote&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;7
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Ctrl + alt + L                   自动格式化代码（排版）
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;main                             打印主函数语句
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;so/sout                          打印输出语句
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;5.fori / arr.fori                打印for循环语句，循环5次 / 数组遍历
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;ctrl+alt+v                       自动补全代码
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;ctrl+p                           查看形参、参数等
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;ctrl+alt+M                       自动抽取方法（选中代码，按快捷键自动抽取）
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;/blockquote&gt;
&lt;h2 id=&#34;常用库&#34;&gt;常用库
&lt;/h2&gt;&lt;h3 id=&#34;scanner&#34;&gt;Scanner
&lt;/h3&gt;&lt;blockquote&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;import java.util.Scanner;    //导包
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Scanner sc = new Scanner(System.in);   //创建对象
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;int i = sc.nextInt();       //接收数据
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;/blockquote&gt;
&lt;h3 id=&#34;random&#34;&gt;Random
&lt;/h3&gt;&lt;blockquote&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;7
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;import java.util.Random;     //导包（自动）
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Random r = new Random();     //创建对象
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;int number = r.nextInt(终止范围);    //生成随机数，左闭右开，一定是从0开始
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;//实现任意数到任意数的范围，如7-15（对应0-8）
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Random r = new Random();
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;int number = r.nextInt(9) + 7;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;/blockquote&gt;
&lt;h2 id=&#34;java语法基础&#34;&gt;java语法基础
&lt;/h2&gt;&lt;h3 id=&#34;常量变量数据类型&#34;&gt;常量、变量、数据类型
&lt;/h3&gt;&lt;blockquote&gt;
&lt;p&gt;（1）如何理解类&lt;/p&gt;
&lt;p&gt;class关键字表示定义一个类，后面跟随类名。那如何理解类呢？可以把类当成人体的细胞，一个java程序由超级多的类组成，编写代码的时候看需要那个细胞就编写那个细胞，从而组成一个完整的人&lt;/p&gt;
&lt;p&gt;（2）类名&lt;/p&gt;
&lt;p&gt;类名要和文件名保持一致&lt;/p&gt;
&lt;p&gt;（3）常量/字面量&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;字面量分类：整数、小数、字符串、字符、布尔、空（null）&lt;/li&gt;
&lt;li&gt;一些特殊的字面量：制表符&lt;code&gt;\t&lt;/code&gt;、空类型&lt;code&gt;null&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;6
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;null不能直接打印，只能用字符串的形式打印，如System.out.println(&amp;#34;null&amp;#34;);
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;直接输出会导致编译错误：System.out.println(null);
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;制表符的作用是把前面的字符串长度补齐到8，或者8的倍数，从而想表格一样整齐，如
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            System.out.println(&amp;#34;name&amp;#34;+&amp;#34;\t&amp;#34;+&amp;#34;tom&amp;#34;);   补4个空格
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            System.out.println(&amp;#34;age&amp;#34;+&amp;#34;\t&amp;#34;+&amp;#34;23&amp;#34;);     补5个空格
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;（4）变量&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;变量可以重复使用，但不能重复定义，即不能写两次&lt;code&gt;int a = xxx;&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;变量使用之前&lt;strong&gt;一定&lt;/strong&gt;要进行赋值&lt;/li&gt;
&lt;li&gt;变量的&lt;strong&gt;作用域范围&lt;/strong&gt;：只在当前所属的大括号内有效&lt;/li&gt;
&lt;li&gt;一条语句中可以定义多个变量，如&lt;code&gt;int d=100,e=200,f=300;&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;（5）数据类型-1&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;java中的数据类型分为：基本数据类型（四类八种）和引用数据类型【&lt;strong&gt;string是典型的引用数据类型&lt;/strong&gt;】&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;注意事项：
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;定义long类型变量：需在数值后面加入L作为后缀（大小写均可）  long a = 99999L;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;定义float类型变量：需在数值后面加入F作为后缀（大小写均可） float a = 23.3F;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;如果不加后缀的话使用的是默认的数据类型（int和double）
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;img src=&#34;markdown 图片/image-20250420175257654.png&#34; alt=&#34;image-20250420175257654&#34; style=&#34;zoom:40%;&#34; /&gt;
&lt;p&gt;（6）计算机中的数据存储&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;二进制：&lt;code&gt;0b&lt;/code&gt;开头；   十进制；   八进制：&lt;code&gt;0&lt;/code&gt;开头；   十六进制：&lt;code&gt;0x&lt;/code&gt;开头&lt;/li&gt;
&lt;li&gt;之所以使用二进制是因为：二进制很好区分，以前是有孔和没孔，现在是高压和低压&lt;/li&gt;
&lt;li&gt;我们知道，计算机中任何数据都是&lt;strong&gt;二进制存储&lt;/strong&gt;。可以把计算机中所有数据归为：文本、图片、声音三类数据，那这三类数据是如何存储的呢？&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;文本&lt;/code&gt;：又包括数字、字母、汉字三类，字母和汉字都是通过码表先转换为十进制数字，然后用二进制存储在计算机中，如Unicode编码表包含了世界各国语言对应的数字&lt;/p&gt;
&lt;p&gt;&lt;code&gt;图片&lt;/code&gt;：图片就是一个一个的像素（分辨率）组成，一个像素对应一个数字（对于灰度图，数字范围是0-255表示不同灰度等级）存储在计算机；而如果是彩色图片，无非就是每一个像素搭配了不同的三原色RGB实现存储（RGB红绿蓝，一个像素点对应三个数字）&lt;/p&gt;
&lt;p&gt;&lt;code&gt;声音&lt;/code&gt;：也是类似，对声音的波形图进行采样再进行存储，即将声音的波形图划分，图上每一个点对应一个数字（类似码表的一一映射）。日常生活中的声音无损和有损就是采样点的多少，采样的多就和真实没啥区别。图片的有损和无损也是同样道理。&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;（7）标识符-2&lt;/p&gt;
&lt;p&gt;标识符/变量名命令建议（阿里规范）&lt;/p&gt;
&lt;img src=&#34;markdown 图片/image-20250420175545181.png&#34; alt=&#34;image-20250420175545181&#34; style=&#34;zoom:50%;&#34; /&gt;
&lt;p&gt;（8）键盘录入-3&lt;/p&gt;
&lt;p&gt;Java有一个类叫&lt;code&gt;Scanner&lt;/code&gt;，这个类就可以接受键盘输入的数字。（变量i记录键盘所敲的数字）&lt;/p&gt;
&lt;img src=&#34;markdown 图片/image-20250420175614616.png&#34; alt=&#34;image-20250420175614616&#34; style=&#34;zoom:50%;&#34; /&gt;
&lt;p&gt;类&amp;ndash;&amp;gt;对象&amp;ndash;&amp;gt;多个实例&lt;/p&gt;
&lt;p&gt;（9）输出语句&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;System.out.println(arr[i]);         //打印后换行
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;System.out.print(arr[i] + &amp;#34; &amp;#34;);     //打印不换行
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;System.out.println();               //只进行换行，不输出内容
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;/blockquote&gt;
&lt;h3 id=&#34;运算符&#34;&gt;运算符
&lt;/h3&gt;&lt;blockquote&gt;
&lt;p&gt;（9）数值拆分&lt;/p&gt;
&lt;p&gt;使用运算符进行数值拆分&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;1234
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;个位：数值 % 10
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;十位：数值 / 10 % 10
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;百位：数值 / 100 % 10
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;千位：数值 / 1000 % 10
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;自增自减运算符：a++先用后加，a的值发生改变；++a先加后用，a的值发生改变&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;int x = 10;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;int y = x++;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;int z = ++x;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;最终x=12，y=10，z=12
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;扩展赋值运算符：&lt;code&gt;+=、-=、*=、/=、%=&lt;/code&gt;底层都隐藏了一个强制类型转换&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;short s = 1;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;s += 1;     //先进行s+1，为int类型，然后强转后赋值
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;等同于s = (short)(s + 1);
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;逻辑运算符：&lt;/p&gt;
&lt;img src=&#34;markdown 图片/image-20250420175956129.png&#34; alt=&#34;image-20250420175956129&#34; style=&#34;zoom: 50%;&#34; /&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;短路逻辑运算符：&lt;/p&gt;
&lt;p&gt;因为逻辑运算符效率比较低（无论左边能不能确定结果，右边都要判断），所以之后常用的是短路逻辑运算符来提高效率。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;举个例子：登陆时需要输入用户名和密码，使用逻辑运算符&amp;amp;时无论用户名输入是否正确，密码都需要判断；而使用短路逻辑运算符&amp;amp;&amp;amp;时，如果用户名输入错误，那无论密码正确与否都不重要的，即不用判断密码了，代码只判断用户名错误就结束了&lt;/p&gt;&lt;/blockquote&gt;
&lt;img src=&#34;markdown 图片/image-20250420180241815.png&#34; alt=&#34;image-20250420180241815&#34; style=&#34;zoom:40%;&#34; /&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;三元运算符：&lt;code&gt;关系表达式 ? 表达式1 : 表达式2;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;先执行关系表达式，结果如果为真，则输出表达式1，结果如果为假，则输出表达式2&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;（10）运算符优先级&lt;/p&gt;
&lt;p&gt;所有数学运算基本都是&lt;strong&gt;从左往右&lt;/strong&gt;进行的；只有单目运算符、赋值运算符和三目运算符例外（从右往左）&lt;/p&gt;
&lt;p&gt;Tip:注意最后一行的扩展赋值运算符是从右往左执行的；记死&lt;strong&gt;小括号最高，扩展赋值最低&lt;/strong&gt;
在大部分编程语言中，都是这样的：有些远算符是从左到右，有些是从右到左（如赋值）&lt;/p&gt;
&lt;img src=&#34;markdown 图片/image-20250420180441451.png&#34; alt=&#34;image-20250420180441451&#34; style=&#34;zoom:50%;&#34; /&gt;
&lt;p&gt;（11）类型转换&lt;/p&gt;
&lt;p&gt;byte、short、char三种类型的数据在运算的时候，都会直接提升为int，然后再进行运算（隐式）&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;数字相加&lt;/li&gt;
&lt;li&gt;字符串相加：当执行“+”操作时，只要出现字符串，就不是运算操作，而是&lt;strong&gt;拼接&lt;/strong&gt;操作了&lt;/li&gt;
&lt;li&gt;字符相加：先把字符通过ascii转为数字在相加&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;byte b1 = 10;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;byte b2 = 20;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;byte result = (byte)(b1+b2);
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;b1+b2在计算前都会先转成int，相加后也是int类型，而最终要赋给byte类型，因此要用强转
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;byte b1 += 10;    //这个不用强转也不报错，原因见上面
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;1+99+&amp;#34;xxcjw&amp;#34;+1    //输出结果是&amp;#34;100xxcjw1&amp;#34;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;true+&amp;#34;xxcjw&amp;#34;      //输出结果是&amp;#34;truexxcjw&amp;#34;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;连续+操作时，从左到右依次执行；当+前后有字符串时，就是拼接操作
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;/blockquote&gt;
&lt;h3 id=&#34;原码反码补码&#34;&gt;原码、反码、补码
&lt;/h3&gt;&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;正数的原码、反码、补码就是其本身，不变&lt;/li&gt;
&lt;li&gt;原码：数据的二进制表现形式，最左边是符号位
&lt;ul&gt;
&lt;li&gt;弊端：如果是负数计算，运算方向和实际相反，导致结果错误&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;反码：（负数反码为）符号位不变，其余数值取反
&lt;ul&gt;
&lt;li&gt;出现目的：为了解决原码不能计算负数的问题出现&lt;/li&gt;
&lt;li&gt;弊端：0有两种表示，如果负数运算时跨0，与实际结果会有1的偏差&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;补码：负数的补码在反码的基础上+1
&lt;ul&gt;
&lt;li&gt;为了解决负数反码计算时跨0的问题而出现&lt;/li&gt;
&lt;li&gt;计算机中的存储和计算都是以&lt;strong&gt;补码&lt;/strong&gt;形式进行的（核心！）&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;看个例子：
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;int a = 300;          //0000 0000 0000 0000 0000 0000 1100 1000
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;byte b = (byte)a;     //1100 1000
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;所以b就是1100 1000，注意啦，这个数值在计算机是以补码存储的，正数无所谓，
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;但此时这个是负数，将补码转为原码最终就是-56，所以b=-56
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;img src=&#34;markdown 图片/image-20250420181244190.png&#34; alt=&#34;image-20250420181244190&#34; style=&#34;zoom:70%;&#34; /&gt;
&lt;p&gt;从位的角度理解逻辑运算符（以原码反码补码解释）&lt;/p&gt;
&lt;img src=&#34;markdown 图片/image-20250420181316947.png&#34; alt=&#34;image-20250420181316947&#34; style=&#34;zoom:67%;&#34; /&gt;&lt;/blockquote&gt;
</description>
        </item>
        
    </channel>
</rss>
